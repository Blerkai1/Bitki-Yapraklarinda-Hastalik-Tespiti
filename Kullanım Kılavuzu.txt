  BİTKİ HASTALIĞI UYGULAMASI KULLANIM KILAVUZU
Bu sistem, kullanıcıdan alınan bitki görselleri üzerinden hastalık tahmini yapmak üzere eğitim ve tahmin modüllerinden oluşur.
Bölüm 1 – MODEL EĞİTİMİ ve GRAFİK ARAYÜZÜ
Bölüm 2 – MODEL YÜKLEME ve GÖRSEL TAHMİNİ

DOSYA/DİZİN YAPISI:
Proje klasörü aşağıdaki gibi yapılandırılmalı;
  plant_diase
 ┣  dataset
 ┃ ┣  class_1 (örnek: Healthy)
 ┃ ┣  class_2 (örnek: Rust)
 ┃ ┗  ...
 ┣  train.py→ Model eğitimi ve grafik gösterimi
 ┣  test.py → Görsel seçip tahmin yapan uygulama
 ┣  classes.txt  → Sınıf isimleri (bir satıra bir sınıf)
 ┣  saved_model  → Eğitim sonucu model buraya kaydedilir (otomatik oluşur)
 1. MODEL EĞİTİMİ ve GRAFİK GÖSTERİMİ:
 Dosya: “train.py”
Yapılanlar:
- Klasörlerden verileri okuyarak model eğitimi yapar.
- Eğitim tamamlandığında `saved_model/` klasörüne `.pb` formatında kaydeder.
- Eğitim tamamlanınca tkinter ile:
   - Eğitim/Doğrulama Doğruluk grafiği
   - Eğitim/Doğrulama Kayıp grafiği
  gösterilir.
 Parametreler:
- Görsel boyutu: 128x128 piksel
- Epoch sayısı: 10
- Batch size: 32
- Validation oranı: %20 (`validation_split=0.2`)
Notlar:
- Eğitim sırasında GUI donabilir, bekleyiniz.
- Eğitim sonunda `saved_model/` klasörü oluşur.

3. GÖRSEL SEÇİMİ ve TAHMİN:
 Dosya: `test.py`
Yapılanlar:
- Eğitimden elde edilen modeli yükler.
- Kullanıcıdan bir resim dosyası seçmesini ister.
- Görseli işler ve tahmin edilen sınıfı yazdırır + görseli gösterir.
Gereksinimler:
- `classes.txt` dosyasında sınıf isimleri sırasıyla yer almalı.
- `saved_model/` klasörü ve içindeki model eğitilmiş olmalı.
Kullanıcıya Gösterilen:
- Terminalde tahmin edilen sınıf ismi
- Matplotlib penceresinde tahmin etiketi ile birlikte görsel

4. GEREKLİ KÜTÜPHANELER:
Aşağıdaki Python kütüphaneleri gereklidir:
- tensorflow
- keras
- numpy
- matplotlib
- pillow (PIL)
- tkinter (Python ile gelir)

6.Kurulum (gerekirse):
pip install tensorflow keras numpy matplotlib pillow

7. SIK KARŞILAŞILAN SORUNLAR:
Hata:`ImportError: cannot import name 'activation'`  
Çözüm: Sadece `tensorflow.keras` kullanın veya `tensorflow` üzerinden import edin (çakışma olmaması için `keras` ve `tensorflow.keras` karıştırılmamalı).
Hata:`Model signature hatası` veya `serving_default bulunamadı`  
 Çözüm: Model doğru formatta (`model.save('saved_model')`) olarak kaydedilmeli.
Hata: Görsel seçilmiyor  
Çözüm: Açılan dosya seçici pencerede `.jpg`, `.png`, `.jpeg` formatında bir dosya seçtiğinizden emin olun.
